# Loads default set of integrations. Do not remove.
default_config:

# Load frontend themes from the themes folder
frontend:
  themes: !include_dir_merge_named themes

automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

# Needed by Tailscale Proxy, allows https://iota.tail32765.ts.net from anywhere
http:
  use_x_forwarded_for: true
  trusted_proxies:
    - 127.0.0.1

mqtt: !include mqtt.yaml

homeassistant: !include customizations.yaml

# Enable turning on LG OLED TV with WakeOnLan packet
wake_on_lan:

# Auto-upload solar data to PVOutput
rest_command:
  update_pvoutput:
    url: https://pvoutput.org/service/r2/addstatus.jsp
    method: post
    content_type: "application/x-www-form-urlencoded"
    headers:
      X-Pvoutput-Apikey: !secret pvoutput_api_key
      X-Pvoutput-SystemId: !secret pvoutput_system_id
    payload: >-
      d={{now().strftime("%Y%m%d")}}
      &t={{now().strftime("%H:%M")}}
      &c1=2
      &v1={{(states('sensor.solar_inverter_todaygenerate')|float*1000)|round(0) }}

# Averaging sensors to enable deriving current state from power use:
sensor:
  - platform: filter
    unique_id: washing_machine_average_power
    name: "Washing Machine Average Power"
    entity_id: sensor.washing_machine_plug_power
    filters:
      - filter: time_simple_moving_average
        window_size: "00:01"
        precision: 2

  - platform: filter
    unique_id: dishwasher_average_power
    name: "Dishwasher Average Power"
    entity_id: sensor.dishwasher_plug_power
    filters:
      - filter: time_simple_moving_average
        window_size: "00:01"
        precision: 2

# Washing machine state derived from door state + average power use
template:
  - sensor:
      - unique_id: washing_machine_state
        name: "Washing Machine State"
        state: >
          {% if is_state('binary_sensor.washing_machine_door_opening', 'on') %}
            off
          {% elif states("sensor.washing_machine_average_power")|float > 10.0 %}
            on
          {% else %}
            standby
          {% endif %}
        icon: >
          {% if is_state("sensor.washing_machine_state", "standby") %}
            mdi:washing-machine-alert
          {% elif is_state("sensor.washing_machine_state", "off") %}
            mdi:washing-machine-off
          {% else %}
            mdi:washing-machine
          {% endif %}
